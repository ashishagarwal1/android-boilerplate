apply plugin: 'com.android.application'
apply from: '../config/quality/quality.gradle'
apply plugin: 'com.github.triplet.play'
//TODO uncomment line below after adding fabric api secret and key to fabric.properties
//apply plugin: 'io.fabric'

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.2'

    defaultConfig {
        applicationId 'com.agarwal.ashish.qna'
        minSdkVersion 16
        targetSdkVersion 25
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
        versionCode 1000
        // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
        versionName '0.1.0'
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    lintOptions {
        disable "UnusedResources", "ObsoleteLintCustomCheck", "BatteryLife"
    }
    signingConfigs {
        // You must set up an environment var before release signing
        // Run: export APP_KEY={password}
        // TODO Add your release keystore in /keystore folder
        release {
            storeFile file('keystore/release.keystore')
            keyAlias 'alias'
            storePassword "$System.env.APP_KEY"
            keyPassword "$System.env.APP_KEY"
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ext.betaDistributionReleaseNotesFilePath =
                    file('../crashlytics_release_notes.txt').absolutePath
        }

        debug {
            versionNameSuffix " Debug"
            debuggable true
        }
        dbAccess {
            testCoverageEnabled false
            versionNameSuffix " dbAccess"
            debuggable true
            signingConfig signingConfigs.debug
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'

        release{
            java.srcDirs = ['src/debug/java']
        }

        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

play {
    serviceAccountEmail = 'your-service-account-email'
    pk12File = file('key.p12')
    // By default publishes to Alpha channel
    track = 'alpha'
}

dependencies {
    final PLAY_SERVICES_VERSION = '9.6.1'
    final SUPPORT_LIBRARY_VERSION = '25.3.1'
    final RETROFIT_VERSION = '2.3.0'
    final DAGGER_VERSION = '2.5'
    final MOCKITO_VERSION = '2.6.2'
    final HAMCREST_VERSION = '1.3'
    final ESPRESSO_VERSION = '2.2.1'
    final RUNNER_VERSION = '0.4'
    final BUTTERKNIFE_VERSION = '8.4.0'
    final ARCH_ROOM_VERSION = '1.1.0-alpha1'
    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:$MOCKITO_VERSION"

    // App Dependencies
    implementation "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    implementation "android.arch.persistence.room:runtime:$ARCH_ROOM_VERSION"
    annotationProcessor "android.arch.persistence.room:compiler:$ARCH_ROOM_VERSION"
    dbAccessImplementation 'com.facebook.stetho:stetho:1.5.0'
    dbAccessImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"

    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.evernote:android-job:1.2.4'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
        transitive = true;
    }

    implementation 'com.jakewharton.timber:timber:4.1.2'
    implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    implementation  "com.google.dagger:dagger:$DAGGER_VERSION"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2
    annotationProcessor daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler

    // Instrumentation test dependencies
    androidTestImplementation jUnit
    androidTestImplementation mockito
    androidTestImplementation "org.mockito:mockito-android:$MOCKITO_VERSION"
    androidTestImplementation "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestImplementation "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestImplementation "com.android.support.test:rules:$RUNNER_VERSION"

    // Unit tests dependencies
    testImplementation jUnit
    testImplementation mockito
    testImplementation "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testImplementation "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testImplementation "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
    testImplementation 'org.robolectric:robolectric:3.3'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.0.2'
            }
        }
    }
}

// Log out test results to console
tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}
